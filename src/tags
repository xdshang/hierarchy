!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AddWordToVocab	PureVector_indep_loss.cpp	/^int AddWordToVocab(char *word) {$/;"	f
AddWordToVocab	Word2Vec.cpp	/^int AddWordToVocab(char *word) {$/;"	f
ArgPos	FixedSy.cpp	/^int ArgPos(char *str, int argc, char **argv) {$/;"	f
ArgPos	PureVector_indep_loss.cpp	/^int ArgPos(char *str, int argc, char **argv) {$/;"	f
BuildPara	Word2Vec.cpp	/^void BuildPara(){$/;"	f
CreateBinaryTree	PureVector_indep_loss.cpp	/^void CreateBinaryTree() {$/;"	f
CreateBinaryTree	Word2Vec.cpp	/^void CreateBinaryTree() {$/;"	f
EXP_TABLE_SIZE	PureVector_indep_loss.cpp	27;"	d	file:
FindMaxDegreeMultiply	PureVector_indep_loss.cpp	/^void FindMaxDegreeMultiply(){$/;"	f
FixedSy_ReadParaSy	FixedSy.cpp	/^void FixedSy_ReadParaSy()$/;"	f
FixedSy_ResetPara	FixedSy.cpp	/^void FixedSy_ResetPara()$/;"	f
FixedSy_TrainModel	FixedSy.cpp	/^void FixedSy_TrainModel() {  \/\/here different threads share variables. so they can implement the parallel processing.$/;"	f
FixedSy_compute_epoch_loss	FixedSy.cpp	/^void * FixedSy_compute_epoch_loss (void *threadarg){$/;"	f
FixedW_InitNet	FixedW.cpp	/^void FixedW_InitNet() {$/;"	f
FixedW_ResetPara	FixedW.cpp	/^void FixedW_ResetPara()$/;"	f
FixedW_TrainModel	FixedW.cpp	/^void FixedW_TrainModel() {  \/\/here different threads share variables. so they can implement the parallel processing.$/;"	f
FixedW_TrainModelThread	FixedW.cpp	/^void *FixedW_TrainModelThread(void *id) {$/;"	f
FixedW_compute_epoch_loss	FixedW.cpp	/^void * FixedW_compute_epoch_loss (void *threadarg){$/;"	f
FixedW_compute_epoch_loss	PureVector_indep_loss.cpp	/^void * FixedW_compute_epoch_loss (void *threadarg){$/;"	f
GetEachPairUpdate	FixedSy.cpp	/^void *GetEachPairUpdate(void *threadarg){$/;"	f
GetImSyn0	FixedW.cpp	/^void GetImSyn0(){$/;"	f
GetWordHash	PureVector_indep_loss.cpp	/^int GetWordHash(char *word) {$/;"	f
GetWordHash	Word2Vec.cpp	/^int GetWordHash(const char *word) {$/;"	f
Idx	Main.cpp	/^int* Idx;$/;"	v
InitNet	FixedSy.cpp	/^void InitNet() {$/;"	f
InitNet	PureVector_indep_loss.cpp	/^void InitNet() {$/;"	f
InitSyn_best	CommonFunction.cpp	/^void InitSyn_best(){$/;"	f
LearnPairsFromFile	CommonFunction.cpp	/^void LearnPairsFromFile ()$/;"	f
LearnPairsFromFile	PureVector_indep_loss.cpp	/^void LearnPairsFromFile ()$/;"	f
LearnVocabFromTrainFile	PureVector_indep_loss.cpp	/^void LearnVocabFromTrainFile() {$/;"	f
LearnVocabFromTrainFile	Word2Vec.cpp	/^void LearnVocabFromTrainFile() {$/;"	f
MAX_CODE_LENGTH	PureVector_indep_loss.cpp	30;"	d	file:
MAX_EXP	PureVector_indep_loss.cpp	28;"	d	file:
MAX_PAIRS_NUM	PureVector_indep_loss.cpp	31;"	d	file:
MAX_SENTENCE_LENGTH	PureVector_indep_loss.cpp	29;"	d	file:
MAX_STRING	PureVector_indep_loss.cpp	26;"	d	file:
MaxIteration	ValueDef1.cpp	/^		batch_size = 512, scale = 1, layer1_size = 1000, offset_sy, offset_w, iteration = 0,MaxIteration = 100;$/;"	v
ReadParaW	FixedW.cpp	/^void ReadParaW(){ \/\/Has been tested.$/;"	f
ReadSy_Delta	CommonFunction.cpp	/^void ReadSy_Delta(){$/;"	f
ReadVocab	PureVector_indep_loss.cpp	/^void ReadVocab() {$/;"	f
ReadVocab	Word2Vec.cpp	/^void ReadVocab() {$/;"	f
ReadWord	PureVector_indep_loss.cpp	/^void ReadWord(char *word, FILE *fin) {$/;"	f
ReadWord	Word2Vec.cpp	/^void ReadWord(char *word, FILE *fin) {$/;"	f
ReadWordIndex	PureVector_indep_loss.cpp	/^int ReadWordIndex(FILE *fin) {$/;"	f
ReadWordIndex	Word2Vec.cpp	/^int ReadWordIndex(FILE *fin) {$/;"	f
ReduceVocab	PureVector_indep_loss.cpp	/^void ReduceVocab() {$/;"	f
ReduceVocab	Word2Vec.cpp	/^void ReduceVocab() {$/;"	f
ResetDelta	CommonFunction.cpp	/^void ResetDelta(){$/;"	f
ResetPara_sy	CommonFunction.cpp	/^void ResetPara_sy(){$/;"	f
ResetPara_w	CommonFunction.cpp	/^void ResetPara_w(){$/;"	f
Run	Main.cpp	/^void Run()$/;"	f
SaveVocab	PureVector_indep_loss.cpp	/^void SaveVocab() {$/;"	f
SaveVocab	Word2Vec.cpp	/^void SaveVocab() {$/;"	f
SearchVocab	PureVector_indep_loss.cpp	/^int SearchVocab(char *word) {$/;"	f
SearchVocab	Word2Vec.cpp	/^int SearchVocab(const char *word) {$/;"	f
SortVocab	PureVector_indep_loss.cpp	/^void SortVocab() {$/;"	f
SortVocab	Word2Vec.cpp	/^void SortVocab() {$/;"	f
TrainModel	PureVector_indep_loss.cpp	/^void TrainModel() {  \/\/here different threads share variables. so they can implement the parallel processing.$/;"	f
TrainModelNegThread	PureVector_indep_loss.cpp	/^void *TrainModelNegThread(void *id){$/;"	f
TrainModelThread	PureVector_indep_loss.cpp	/^void *TrainModelThread(void *id) {$/;"	f
UpdateEpoch	FixedSy.cpp	/^void UpdateEpoch()$/;"	f
Val	Main.cpp	/^float* Val;$/;"	v
VocabCompare	PureVector_indep_loss.cpp	/^int VocabCompare(const void *a, const void *b) {$/;"	f
VocabCompare	Word2Vec.cpp	/^int VocabCompare(const void *a, const void *b) {$/;"	f
aa_loss_thread	PureVector_indep_loss.cpp	/^	float *aa_loss_thread;$/;"	m	struct:thread_loss	file:
ab_loss_thread	PureVector_indep_loss.cpp	/^	float *ab_loss_thread;$/;"	m	struct:thread_loss	file:
alpha	PureVector_indep_loss.cpp	/^	real alpha;$/;"	m	struct:thread_par	file:
alpha	PureVector_indep_loss.cpp	/^real alpha = 0.001, starting_alpha, sample = 0;$/;"	v
ba_loss_thread	PureVector_indep_loss.cpp	/^	float *ba_loss_thread;$/;"	m	struct:thread_loss	file:
batch_size	ValueDef1.cpp	/^		batch_size = 512, scale = 1, layer1_size = 1000, offset_sy, offset_w, iteration = 0,MaxIteration = 100;$/;"	v
bb_loss_thread	PureVector_indep_loss.cpp	/^	float *bb_loss_thread;$/;"	m	struct:thread_loss	file:
binary	PureVector_indep_loss.cpp	/^int binary = 0, cbow = 0, debug_mode = 2, window = 5, min_count = 5, num_threads = 1, min_reduce = 1, num_epoches = 1;$/;"	v
binary	ValueDef1.cpp	/^int binary = 0, debug_mode = 2, min_count = 5, num_threads = 1, min_reduce = 1, num_epoches = 1,$/;"	v
cbow	PureVector_indep_loss.cpp	/^int binary = 0, cbow = 0, debug_mode = 2, window = 5, min_count = 5, num_threads = 1, min_reduce = 1, num_epoches = 1;$/;"	v
classes	PureVector_indep_loss.cpp	/^long long train_words = 0, pair_count_actual = 0, file_size = 0, classes = 0;$/;"	v
cn	PureVector_indep_loss.cpp	/^	int cn;  \/\/ the count of the vocabulary word.$/;"	m	struct:vocab_word	file:
cn	PureVector_indep_loss.cpp	/^	int cn;$/;"	m	struct:image_word	file:
cn	PureVector_indep_loss.cpp	/^	int cn;$/;"	m	struct:tag_word	file:
code	PureVector_indep_loss.cpp	/^	char *word, *code, codelen;$/;"	m	struct:vocab_word	file:
codelen	PureVector_indep_loss.cpp	/^	char *word, *code, codelen;$/;"	m	struct:vocab_word	file:
countNonzero	CommonFunction.cpp	/^void countNonzero (char featFilePath[MAX_STRING])$/;"	f
countNonzero_folder	CommonFunction.cpp	/^void countNonzero_folder(char featfolder[MAX_STRING]){$/;"	f
debug_mode	PureVector_indep_loss.cpp	/^int binary = 0, cbow = 0, debug_mode = 2, window = 5, min_count = 5, num_threads = 1, min_reduce = 1, num_epoches = 1;$/;"	v
debug_mode	ValueDef1.cpp	/^int binary = 0, debug_mode = 2, min_count = 5, num_threads = 1, min_reduce = 1, num_epoches = 1,$/;"	v
endsWith	CommonFunction.cpp	/^bool endsWith (char* base, const char* str) {$/;"	f
endsWith	PureVector_indep_loss.cpp	/^bool endsWith (char* base, const char* str) {$/;"	f
epoch_loss	PureVector_indep_loss.cpp	/^double epoch_loss = 0.0 ;$/;"	v
expTable	PureVector_indep_loss.cpp	/^real *syn0, *syn1, *expTable, *syn0_delta, *syn1_delta, *syn0_best, *syn1neg;$/;"	v
expTable	ValueDef1.cpp	/^float *syn0, *syn1, *expTable, *syn0_delta, *syn1_delta, *syn1neg,$/;"	v
feat_file	ValueDef1.cpp	/^char train_file[MAX_STRING], syn0_best_file[MAX_STRING], syn1_best_file[MAX_STRING], feat_file[MAX_STRING],feat_folder[MAX_STRING], syn1_delta_file[MAX_STRING], syn0_delta_file[MAX_STRING],$/;"	v
feat_folder	ValueDef1.cpp	/^char train_file[MAX_STRING], syn0_best_file[MAX_STRING], syn1_best_file[MAX_STRING], feat_file[MAX_STRING],feat_folder[MAX_STRING], syn1_delta_file[MAX_STRING], syn0_delta_file[MAX_STRING],$/;"	v
file_size	PureVector_indep_loss.cpp	/^long long train_words = 0, pair_count_actual = 0, file_size = 0, classes = 0;$/;"	v
file_size	ValueDef1.cpp	/^long long train_words = 0, pair_count_actual = 0, file_size = 0, total_pairs = 0;$/;"	v
fixedW_alpha	FixedW.cpp	/^float fixedW_alpha, fixedW_starting_alpha;$/;"	v
fixedW_starting_alpha	FixedW.cpp	/^float fixedW_alpha, fixedW_starting_alpha;$/;"	v
fixed_sy_loss_file	FixedSy.cpp	/^char fixed_sy_loss_file[MAX_STRING];$/;"	v
fixed_w_loss_file	FixedW.cpp	/^char fixed_w_loss_file[MAX_STRING];$/;"	v
fixedsy_alpha	FixedSy.cpp	/^float fixedsy_alpha, fixedsy_starting_alpha;$/;"	v
fixedsy_starting_alpha	FixedSy.cpp	/^float fixedsy_alpha, fixedsy_starting_alpha;$/;"	v
fixedw_alpha_best	ValueDef1.cpp	/^float sample = 0, max_norm = 1.0, iter_loss = 0, fixedw_alpha_best, fixsy_alpha_best, iter_loss_best;$/;"	v
fixsy_alpha_best	ValueDef1.cpp	/^float sample = 0, max_norm = 1.0, iter_loss = 0, fixedw_alpha_best, fixsy_alpha_best, iter_loss_best;$/;"	v
image_index	ValueDef1.cpp	/^map<string, int> image_index;$/;"	v
image_index_file	ValueDef1.cpp	/^image_index_file[MAX_STRING], save_vocab_file[MAX_STRING], w_best_file[MAX_STRING], read_vocab_file[MAX_STRING],iter_w_best_file[MAX_STRING], iter_w_delta_best_file[MAX_STRING],$/;"	v
image_word	PureVector_indep_loss.cpp	/^struct image_word{$/;"	s	file:
image_words	PureVector_indep_loss.cpp	/^struct image_word *image_words;$/;"	v	typeref:struct:image_word
iter_loss	ValueDef1.cpp	/^float sample = 0, max_norm = 1.0, iter_loss = 0, fixedw_alpha_best, fixsy_alpha_best, iter_loss_best;$/;"	v
iter_loss_best	ValueDef1.cpp	/^float sample = 0, max_norm = 1.0, iter_loss = 0, fixedw_alpha_best, fixsy_alpha_best, iter_loss_best;$/;"	v
iter_syn0_best_file	ValueDef1.cpp	/^iter_syn0_best_file[MAX_STRING], iter_syn0_delta_best_file[MAX_STRING], iter_syn1_best_file[MAX_STRING], iter_syn1_delta_best_file[MAX_STRING],syn0_temp_file[MAX_STRING], tree_file[MAX_STRING];$/;"	v
iter_syn0_delta_best_file	ValueDef1.cpp	/^iter_syn0_best_file[MAX_STRING], iter_syn0_delta_best_file[MAX_STRING], iter_syn1_best_file[MAX_STRING], iter_syn1_delta_best_file[MAX_STRING],syn0_temp_file[MAX_STRING], tree_file[MAX_STRING];$/;"	v
iter_syn1_best_file	ValueDef1.cpp	/^iter_syn0_best_file[MAX_STRING], iter_syn0_delta_best_file[MAX_STRING], iter_syn1_best_file[MAX_STRING], iter_syn1_delta_best_file[MAX_STRING],syn0_temp_file[MAX_STRING], tree_file[MAX_STRING];$/;"	v
iter_syn1_delta_best_file	ValueDef1.cpp	/^iter_syn0_best_file[MAX_STRING], iter_syn0_delta_best_file[MAX_STRING], iter_syn1_best_file[MAX_STRING], iter_syn1_delta_best_file[MAX_STRING],syn0_temp_file[MAX_STRING], tree_file[MAX_STRING];$/;"	v
iter_w_best_file	ValueDef1.cpp	/^image_index_file[MAX_STRING], save_vocab_file[MAX_STRING], w_best_file[MAX_STRING], read_vocab_file[MAX_STRING],iter_w_best_file[MAX_STRING], iter_w_delta_best_file[MAX_STRING],$/;"	v
iter_w_delta_best_file	ValueDef1.cpp	/^image_index_file[MAX_STRING], save_vocab_file[MAX_STRING], w_best_file[MAX_STRING], read_vocab_file[MAX_STRING],iter_w_best_file[MAX_STRING], iter_w_delta_best_file[MAX_STRING],$/;"	v
iteration	ValueDef1.cpp	/^		batch_size = 512, scale = 1, layer1_size = 1000, offset_sy, offset_w, iteration = 0,MaxIteration = 100;$/;"	v
layer1_size	PureVector_indep_loss.cpp	/^long long vocab_max_size = 1000, vocab_size = 0, layer1_size = 100, total_pairs = 0;$/;"	v
layer1_size	ValueDef1.cpp	/^		batch_size = 512, scale = 1, layer1_size = 1000, offset_sy, offset_w, iteration = 0,MaxIteration = 100;$/;"	v
loss_thread	PureVector_indep_loss.cpp	/^	float *loss_thread;$/;"	m	struct:thread_loss	file:
main	Main.cpp	/^int main(int argc, char **argv) {$/;"	f
main	PureVector_indep_loss.cpp	/^int main(int argc, char **argv) {$/;"	f
max_degree_multi	PureVector_indep_loss.cpp	/^	long long max_degree_multi;$/;"	m	struct:negative_pairs	file:
max_norm	ValueDef1.cpp	/^float sample = 0, max_norm = 1.0, iter_loss = 0, fixedw_alpha_best, fixsy_alpha_best, iter_loss_best;$/;"	v
min_count	PureVector_indep_loss.cpp	/^int binary = 0, cbow = 0, debug_mode = 2, window = 5, min_count = 5, num_threads = 1, min_reduce = 1, num_epoches = 1;$/;"	v
min_count	ValueDef1.cpp	/^int binary = 0, debug_mode = 2, min_count = 5, num_threads = 1, min_reduce = 1, num_epoches = 1,$/;"	v
min_reduce	PureVector_indep_loss.cpp	/^int binary = 0, cbow = 0, debug_mode = 2, window = 5, min_count = 5, num_threads = 1, min_reduce = 1, num_epoches = 1;$/;"	v
min_reduce	ValueDef1.cpp	/^int binary = 0, debug_mode = 2, min_count = 5, num_threads = 1, min_reduce = 1, num_epoches = 1,$/;"	v
neg_pairs	PureVector_indep_loss.cpp	/^struct negative_pairs *neg_pairs;$/;"	v	typeref:struct:negative_pairs
negative_pair_size	PureVector_indep_loss.cpp	/^long long negative_pair_size; \/\/record which has no such pairs but max degree. \/\/ real data is <image, user> pairs.$/;"	v
negative_pairs	PureVector_indep_loss.cpp	/^struct negative_pairs{$/;"	s	file:
negative_ratio	PureVector_indep_loss.cpp	/^float negative_ratio = 0.1;$/;"	v
nonzeroIdx	Main.cpp	/^int* nonzeroIdx; \/\/nonzeroIdx[i] is the starting idx of array Idx$/;"	v
nonzeroLen	Main.cpp	/^int* nonzeroLen; \/\/nonzeroLen[i] is the #non zero entries of image i.$/;"	v
num_epoches	PureVector_indep_loss.cpp	/^int binary = 0, cbow = 0, debug_mode = 2, window = 5, min_count = 5, num_threads = 1, min_reduce = 1, num_epoches = 1;$/;"	v
num_epoches	ValueDef1.cpp	/^int binary = 0, debug_mode = 2, min_count = 5, num_threads = 1, min_reduce = 1, num_epoches = 1,$/;"	v
num_threads	PureVector_indep_loss.cpp	/^int binary = 0, cbow = 0, debug_mode = 2, window = 5, min_count = 5, num_threads = 1, min_reduce = 1, num_epoches = 1;$/;"	v
num_threads	ValueDef1.cpp	/^int binary = 0, debug_mode = 2, min_count = 5, num_threads = 1, min_reduce = 1, num_epoches = 1,$/;"	v
offset	ValueDef1.cpp	/^int offset = 0;$/;"	v
offset_sy	ValueDef1.cpp	/^		batch_size = 512, scale = 1, layer1_size = 1000, offset_sy, offset_w, iteration = 0,MaxIteration = 100;$/;"	v
offset_w	ValueDef1.cpp	/^		batch_size = 512, scale = 1, layer1_size = 1000, offset_sy, offset_w, iteration = 0,MaxIteration = 100;$/;"	v
pair	PureVector_indep_loss.cpp	/^	std::pair <char[MAX_STRING], char[MAX_STRING]> pair;$/;"	m	struct:negative_pairs	file:
pair_count_actual	PureVector_indep_loss.cpp	/^long long train_words = 0, pair_count_actual = 0, file_size = 0, classes = 0;$/;"	v
pair_count_actual	ValueDef1.cpp	/^long long train_words = 0, pair_count_actual = 0, file_size = 0, total_pairs = 0;$/;"	v
pair_size	PureVector_indep_loss.cpp	/^long long pair_size; \/\/number of pairs;$/;"	v
pair_size	ValueDef1.cpp	/^long long vocab_max_size = 1000, vocab_size = 0, pair_size;$/;"	v
pairs	PureVector_indep_loss.cpp	/^pair<char[MAX_STRING], char[MAX_STRING]> pairs[MAX_PAIRS_NUM];$/;"	v
pairs	ValueDef1.cpp	/^pair<char[MAX_STRING], char[MAX_STRING]> pairs[MAX_PAIRS_NUM];$/;"	v
point	PureVector_indep_loss.cpp	/^	int *point;$/;"	m	struct:vocab_word	file:
randomVector	ValueDef1.cpp	/^std::vector <int> randomVector;$/;"	v
readFeat	CommonFunction.cpp	/^void readFeat(char featFilePath[MAX_STRING])$/;"	f
readFeat_folder	CommonFunction.cpp	/^void readFeat_folder(char *featfolder){$/;"	f
readImageIndex	CommonFunction.cpp	/^void readImageIndex (char imageIndexPath[MAX_STRING]){$/;"	f
read_sy	FixedSy.cpp	/^int read_sy = 0;$/;"	v
read_sy_delta	FixedW.cpp	/^int read_w = 0, read_sy_delta = 0;$/;"	v
read_vocab_file	PureVector_indep_loss.cpp	/^save_vocab_file[MAX_STRING], read_vocab_file[MAX_STRING];$/;"	v
read_vocab_file	ValueDef1.cpp	/^image_index_file[MAX_STRING], save_vocab_file[MAX_STRING], w_best_file[MAX_STRING], read_vocab_file[MAX_STRING],iter_w_best_file[MAX_STRING], iter_w_delta_best_file[MAX_STRING],$/;"	v
read_w	FixedW.cpp	/^int read_w = 0, read_sy_delta = 0;$/;"	v
real	PureVector_indep_loss.cpp	/^typedef float real;                    \/\/ Precision of float numbers$/;"	t	file:
sample	PureVector_indep_loss.cpp	/^real alpha = 0.001, starting_alpha, sample = 0;$/;"	v
sample	ValueDef1.cpp	/^float sample = 0, max_norm = 1.0, iter_loss = 0, fixedw_alpha_best, fixsy_alpha_best, iter_loss_best;$/;"	v
save_vocab_file	PureVector_indep_loss.cpp	/^save_vocab_file[MAX_STRING], read_vocab_file[MAX_STRING];$/;"	v
save_vocab_file	ValueDef1.cpp	/^image_index_file[MAX_STRING], save_vocab_file[MAX_STRING], w_best_file[MAX_STRING], read_vocab_file[MAX_STRING],iter_w_best_file[MAX_STRING], iter_w_delta_best_file[MAX_STRING],$/;"	v
scale	ValueDef1.cpp	/^		batch_size = 512, scale = 1, layer1_size = 1000, offset_sy, offset_w, iteration = 0,MaxIteration = 100;$/;"	v
start	PureVector_indep_loss.cpp	/^clock_t start;$/;"	v
starting_alpha	PureVector_indep_loss.cpp	/^real alpha = 0.001, starting_alpha, sample = 0;$/;"	v
syn0	PureVector_indep_loss.cpp	/^real *syn0, *syn1, *expTable, *syn0_delta, *syn1_delta, *syn0_best, *syn1neg;$/;"	v
syn0	ValueDef1.cpp	/^float *syn0, *syn1, *expTable, *syn0_delta, *syn1_delta, *syn1neg,$/;"	v
syn0_best	PureVector_indep_loss.cpp	/^real *syn0, *syn1, *expTable, *syn0_delta, *syn1_delta, *syn0_best, *syn1neg;$/;"	v
syn0_best	ValueDef1.cpp	/^*tranMatrix_delta, *syn1_update, *syn0_update, *tranMatrix_update,*tranMatrix_best, *tranMatrix_delta_best, *syn0_best, *syn1_best, *syn1_delta_best, *syn0_delta_best;$/;"	v
syn0_best_file	PureVector_indep_loss.cpp	/^char train_file[MAX_STRING], syn0_best_file[MAX_STRING], syn1_best_file[MAX_STRING], syn0_delta_file[MAX_STRING],  syn1_delta_file[MAX_STRING],$/;"	v
syn0_best_file	ValueDef1.cpp	/^char train_file[MAX_STRING], syn0_best_file[MAX_STRING], syn1_best_file[MAX_STRING], feat_file[MAX_STRING],feat_folder[MAX_STRING], syn1_delta_file[MAX_STRING], syn0_delta_file[MAX_STRING],$/;"	v
syn0_delta	PureVector_indep_loss.cpp	/^real *syn0, *syn1, *expTable, *syn0_delta, *syn1_delta, *syn0_best, *syn1neg;$/;"	v
syn0_delta	ValueDef1.cpp	/^float *syn0, *syn1, *expTable, *syn0_delta, *syn1_delta, *syn1neg,$/;"	v
syn0_delta_best	ValueDef1.cpp	/^*tranMatrix_delta, *syn1_update, *syn0_update, *tranMatrix_update,*tranMatrix_best, *tranMatrix_delta_best, *syn0_best, *syn1_best, *syn1_delta_best, *syn0_delta_best;$/;"	v
syn0_delta_file	PureVector_indep_loss.cpp	/^char train_file[MAX_STRING], syn0_best_file[MAX_STRING], syn1_best_file[MAX_STRING], syn0_delta_file[MAX_STRING],  syn1_delta_file[MAX_STRING],$/;"	v
syn0_delta_file	ValueDef1.cpp	/^char train_file[MAX_STRING], syn0_best_file[MAX_STRING], syn1_best_file[MAX_STRING], feat_file[MAX_STRING],feat_folder[MAX_STRING], syn1_delta_file[MAX_STRING], syn0_delta_file[MAX_STRING],$/;"	v
syn0_temp_file	ValueDef1.cpp	/^iter_syn0_best_file[MAX_STRING], iter_syn0_delta_best_file[MAX_STRING], iter_syn1_best_file[MAX_STRING], iter_syn1_delta_best_file[MAX_STRING],syn0_temp_file[MAX_STRING], tree_file[MAX_STRING];$/;"	v
syn0_update	ValueDef1.cpp	/^*tranMatrix_delta, *syn1_update, *syn0_update, *tranMatrix_update,*tranMatrix_best, *tranMatrix_delta_best, *syn0_best, *syn1_best, *syn1_delta_best, *syn0_delta_best;$/;"	v
syn1	PureVector_indep_loss.cpp	/^real *syn0, *syn1, *expTable, *syn0_delta, *syn1_delta, *syn0_best, *syn1neg;$/;"	v
syn1	ValueDef1.cpp	/^float *syn0, *syn1, *expTable, *syn0_delta, *syn1_delta, *syn1neg,$/;"	v
syn1_best	ValueDef1.cpp	/^*tranMatrix_delta, *syn1_update, *syn0_update, *tranMatrix_update,*tranMatrix_best, *tranMatrix_delta_best, *syn0_best, *syn1_best, *syn1_delta_best, *syn0_delta_best;$/;"	v
syn1_best_file	PureVector_indep_loss.cpp	/^char train_file[MAX_STRING], syn0_best_file[MAX_STRING], syn1_best_file[MAX_STRING], syn0_delta_file[MAX_STRING],  syn1_delta_file[MAX_STRING],$/;"	v
syn1_best_file	ValueDef1.cpp	/^char train_file[MAX_STRING], syn0_best_file[MAX_STRING], syn1_best_file[MAX_STRING], feat_file[MAX_STRING],feat_folder[MAX_STRING], syn1_delta_file[MAX_STRING], syn0_delta_file[MAX_STRING],$/;"	v
syn1_delta	PureVector_indep_loss.cpp	/^real *syn0, *syn1, *expTable, *syn0_delta, *syn1_delta, *syn0_best, *syn1neg;$/;"	v
syn1_delta	ValueDef1.cpp	/^float *syn0, *syn1, *expTable, *syn0_delta, *syn1_delta, *syn1neg,$/;"	v
syn1_delta_best	ValueDef1.cpp	/^*tranMatrix_delta, *syn1_update, *syn0_update, *tranMatrix_update,*tranMatrix_best, *tranMatrix_delta_best, *syn0_best, *syn1_best, *syn1_delta_best, *syn0_delta_best;$/;"	v
syn1_delta_file	PureVector_indep_loss.cpp	/^char train_file[MAX_STRING], syn0_best_file[MAX_STRING], syn1_best_file[MAX_STRING], syn0_delta_file[MAX_STRING],  syn1_delta_file[MAX_STRING],$/;"	v
syn1_delta_file	ValueDef1.cpp	/^char train_file[MAX_STRING], syn0_best_file[MAX_STRING], syn1_best_file[MAX_STRING], feat_file[MAX_STRING],feat_folder[MAX_STRING], syn1_delta_file[MAX_STRING], syn0_delta_file[MAX_STRING],$/;"	v
syn1_update	ValueDef1.cpp	/^*tranMatrix_delta, *syn1_update, *syn0_update, *tranMatrix_update,*tranMatrix_best, *tranMatrix_delta_best, *syn0_best, *syn1_best, *syn1_delta_best, *syn0_delta_best;$/;"	v
syn1neg	PureVector_indep_loss.cpp	/^real *syn0, *syn1, *expTable, *syn0_delta, *syn1_delta, *syn0_best, *syn1neg;$/;"	v
syn1neg	ValueDef1.cpp	/^float *syn0, *syn1, *expTable, *syn0_delta, *syn1_delta, *syn1neg,$/;"	v
table	PureVector_indep_loss.cpp	/^int *table;$/;"	v
table	ValueDef1.cpp	/^int *vocab_hash, *table;$/;"	v
table_size	PureVector_indep_loss.cpp	/^const int table_size = 1e8;$/;"	v
table_size	ValueDef1.cpp	/^const int table_size = 1e8;$/;"	v
tag_word	PureVector_indep_loss.cpp	/^struct tag_word{$/;"	s	file:
tag_words	PureVector_indep_loss.cpp	/^struct tag_word *tag_words;$/;"	v	typeref:struct:tag_word
thread_id	PureVector_indep_loss.cpp	/^	int thread_id;$/;"	m	struct:thread_loss	file:
thread_id	PureVector_indep_loss.cpp	/^	int* thread_id;$/;"	m	struct:thread_par	file:
thread_loss	PureVector_indep_loss.cpp	/^struct thread_loss{$/;"	s	file:
thread_par	PureVector_indep_loss.cpp	/^struct thread_par{$/;"	s	file:
total_pairs	PureVector_indep_loss.cpp	/^long long vocab_max_size = 1000, vocab_size = 0, layer1_size = 100, total_pairs = 0;$/;"	v
total_pairs	ValueDef1.cpp	/^long long train_words = 0, pair_count_actual = 0, file_size = 0, total_pairs = 0;$/;"	v
train_file	PureVector_indep_loss.cpp	/^char train_file[MAX_STRING], syn0_best_file[MAX_STRING], syn1_best_file[MAX_STRING], syn0_delta_file[MAX_STRING],  syn1_delta_file[MAX_STRING],$/;"	v
train_file	ValueDef1.cpp	/^char train_file[MAX_STRING], syn0_best_file[MAX_STRING], syn1_best_file[MAX_STRING], feat_file[MAX_STRING],feat_folder[MAX_STRING], syn1_delta_file[MAX_STRING], syn0_delta_file[MAX_STRING],$/;"	v
train_words	PureVector_indep_loss.cpp	/^long long train_words = 0, pair_count_actual = 0, file_size = 0, classes = 0;$/;"	v
train_words	ValueDef1.cpp	/^long long train_words = 0, pair_count_actual = 0, file_size = 0, total_pairs = 0;$/;"	v
tranMatrix	ValueDef1.cpp	/^float tranMatrix[1000 * feat_size];$/;"	v
tranMatrix_best	ValueDef1.cpp	/^*tranMatrix_delta, *syn1_update, *syn0_update, *tranMatrix_update,*tranMatrix_best, *tranMatrix_delta_best, *syn0_best, *syn1_best, *syn1_delta_best, *syn0_delta_best;$/;"	v
tranMatrix_delta	ValueDef1.cpp	/^*tranMatrix_delta, *syn1_update, *syn0_update, *tranMatrix_update,*tranMatrix_best, *tranMatrix_delta_best, *syn0_best, *syn1_best, *syn1_delta_best, *syn0_delta_best;$/;"	v
tranMatrix_delta_best	ValueDef1.cpp	/^*tranMatrix_delta, *syn1_update, *syn0_update, *tranMatrix_update,*tranMatrix_best, *tranMatrix_delta_best, *syn0_best, *syn1_best, *syn1_delta_best, *syn0_delta_best;$/;"	v
tranMatrix_update	ValueDef1.cpp	/^*tranMatrix_delta, *syn1_update, *syn0_update, *tranMatrix_update,*tranMatrix_best, *tranMatrix_delta_best, *syn0_best, *syn1_best, *syn1_delta_best, *syn0_delta_best;$/;"	v
tree_file	ValueDef1.cpp	/^iter_syn0_best_file[MAX_STRING], iter_syn0_delta_best_file[MAX_STRING], iter_syn1_best_file[MAX_STRING], iter_syn1_delta_best_file[MAX_STRING],syn0_temp_file[MAX_STRING], tree_file[MAX_STRING];$/;"	v
vocab	PureVector_indep_loss.cpp	/^struct vocab_word *vocab;$/;"	v	typeref:struct:vocab_word
vocab	ValueDef1.cpp	/^struct vocab_word *vocab;$/;"	v	typeref:struct:vocab_word
vocab_hash	PureVector_indep_loss.cpp	/^int *vocab_hash;$/;"	v
vocab_hash	ValueDef1.cpp	/^int *vocab_hash, *table;$/;"	v
vocab_hash_size	PureVector_indep_loss.cpp	/^const int vocab_hash_size = 30000000;  \/\/ Maximum 30 * 0.7 = 21M words in the vocabulary$/;"	v
vocab_hash_size	ValueDef1.cpp	/^const int vocab_hash_size = 30000000;  \/\/ Maximum 30 * 0.7 = 21M words in the vocabulary$/;"	v
vocab_max_size	PureVector_indep_loss.cpp	/^long long vocab_max_size = 1000, vocab_size = 0, layer1_size = 100, total_pairs = 0;$/;"	v
vocab_max_size	ValueDef1.cpp	/^long long vocab_max_size = 1000, vocab_size = 0, pair_size;$/;"	v
vocab_size	PureVector_indep_loss.cpp	/^long long vocab_max_size = 1000, vocab_size = 0, layer1_size = 100, total_pairs = 0;$/;"	v
vocab_size	ValueDef1.cpp	/^long long vocab_max_size = 1000, vocab_size = 0, pair_size;$/;"	v
vocab_word	PureVector_indep_loss.cpp	/^struct vocab_word {$/;"	s	file:
w_best_file	ValueDef1.cpp	/^image_index_file[MAX_STRING], save_vocab_file[MAX_STRING], w_best_file[MAX_STRING], read_vocab_file[MAX_STRING],iter_w_best_file[MAX_STRING], iter_w_delta_best_file[MAX_STRING],$/;"	v
window	PureVector_indep_loss.cpp	/^int binary = 0, cbow = 0, debug_mode = 2, window = 5, min_count = 5, num_threads = 1, min_reduce = 1, num_epoches = 1;$/;"	v
word	PureVector_indep_loss.cpp	/^	char *word, *code, codelen;$/;"	m	struct:vocab_word	file:
word	PureVector_indep_loss.cpp	/^	char *word;$/;"	m	struct:image_word	file:
word	PureVector_indep_loss.cpp	/^	char *word;$/;"	m	struct:tag_word	file:
